package lollipop.domain.search

alter Domain DO_DATE {
	indexType: "standard:date"
}

alter Domain DO_YEAR {
	indexType: "standard:integer"
}

alter Domain DO_DURATION {
	indexType: "standard:integer"
}

alter Domain DO_COMMENT {
  indexType : "text_fr"
}

alter Domain DO_LABEL_LONG {
    indexType : "code"
}


create IndexDefinition IDX_MOVIE {  
  keyConcept : DT_MOVIE
  dtIndex : DT_MOVIE
  loaderId : "MovieSearchLoader"
}

create FacetDefinition FCT_MOVIE_RUNTIME {  
  dtDefinition:DT_MOVIE, fieldName:"RUNTIME", label:"Par durée"
}

create FacetDefinition FCT_MOVIE_YEAR {  
  dtDefinition:DT_MOVIE, fieldName:"YEAR", label:"Par date"
  range R1 { filter:"YEAR:[* TO 1970]", label:"avant 1970"},
  range R2 { filter:"YEAR:[1970 TO 1980]", label:"1970-1980"},
  range R2 { filter:"YEAR:[1980 TO 1990]", label:"1980-1990"},
  range R2 { filter:"YEAR:[1990 TO 2000]", label:"1990-2000"},
  range R3 { filter:"YEAR:[2000 TO *]", label:"apres 2000"}
}

create FacetedQueryDefinition QRY_MOVIE {  
  keyConcept : DT_MOVIE
  facets : [ FCT_MOVIE_RUNTIME, FCT_MOVIE_YEAR]
  domainCriteria : DO_LABEL
  listFilterBuilderClass : "io.vertigo.dynamox.search.DslListFilterBuilder"  
  listFilterBuilderQuery : "_all:#+query*#"
}

create Task TK_GET_MOVIE_INDEX {
	className : "io.vertigo.dynamox.task.TaskEngineSelect"
    request : " Select * From MOVIE mov
	  where mov.MOV_ID in (#DTC_MOVIE_IDS.ROWNUM.DUMMY_LONG#)
    Order by mov.mov_id "
    attribute DTC_MOVIE_IDS {domain : DO_DT_DUMMY_DTC notNull:"true" inOut :"in"}
    attribute DTC_MOVIE {domain : DO_DT_MOVIE_DTC  notNull:"true" inOut :"out"}
}
